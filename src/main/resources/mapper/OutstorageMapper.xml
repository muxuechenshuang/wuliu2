<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forest.wu.dao.OutstorageMapper">
    <resultMap id="BaseResultMap" type="com.forest.wu.pojo.Outstorage">
        <id column="outId" jdbcType="INTEGER" property="outId"/>
        <result column="sendUnit" jdbcType="INTEGER" property="sendUnit"/>
        <result column="getUnit" jdbcType="INTEGER" property="getUnit"/>
        <result column="out_time" jdbcType="TIMESTAMP" property="out_time"/>
        <result column="productNum" jdbcType="INTEGER" property="productNum"/>
        <result column="workorderId" jdbcType="INTEGER" property="workorderId"/>
        <result column="packageId" jdbcType="INTEGER" property="packageId"/>
        <result column="packageWeight" jdbcType="DOUBLE" property="packageWeight"/>
        <result column="outStorageStatus" jdbcType="INTEGER" property="outStorageStatus"/>
        <result column="storageId" jdbcType="INTEGER" property="storageId"/>
    </resultMap>
    <sql id="Base_Column_List">
    outId, sendUnit, getUnit, out_time, productNum, workorderId,packageId, packageWeight, outStorageStatus,storageId
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from outstorage
        where outId = #{outId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from outstorage
    where outId = #{outId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.forest.wu.pojo.Outstorage">
    insert into outstorage (outId, sendUnit, getUnit, 
      out_time, productNum, workorderId,packageId,
      packageWeight, outStorageStatus)
    values (#{outId,jdbcType=INTEGER}, #{sendUnit,jdbcType=INTEGER}, #{getUnit,jdbcType=INTEGER}, 
      #{out_time,jdbcType=TIMESTAMP}, #{productNum,jdbcType=INTEGER},#{workorderId,jdbcType=INTEGER}, #{packageId,jdbcType=INTEGER},
      #{packageWeight,jdbcType=DOUBLE}, #{outStorageStatus,jdbcType=INTEGER}),#{storageId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.forest.wu.pojo.Outstorage">
        insert into outstorage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outId != null">
                outId,
            </if>
            <if test="sendUnit != null">
                sendUnit,
            </if>
            <if test="getUnit != null">
                getUnit,
            </if>
            <if test="out_time != null">
                out_time,
            </if>
            <if test="productNum != null">
                productNum,
            </if>
            <if test="workorderId != null">
                workorderId,
            </if>
            <if test="packageId != null">
                packageId,
            </if>
            <if test="packageWeight != null">
                packageWeight,
            </if>
            <if test="outStorageStatus != null">
                outStorageStatus,
            </if>
            <if test="storageId != null">
                storageId
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outId != null">
                #{outId,jdbcType=INTEGER},
            </if>
            <if test="sendUnit != null">
                #{sendUnit,jdbcType=INTEGER},
            </if>
            <if test="getUnit != null">
                #{getUnit,jdbcType=INTEGER},
            </if>
            <if test="out_time != null">
                #{out_time,jdbcType=TIMESTAMP},
            </if>
            <if test="productNum != null">
                #{productNum,jdbcType=INTEGER},
            </if>
            <if test="workorderId != null">
                #{workorderId,jdbcType=INTEGER},
            </if>
            <if test="packageId != null">
                #{packageId,jdbcType=INTEGER},
            </if>
            <if test="packageWeight != null">
                #{packageWeight,jdbcType=DOUBLE},
            </if>
            <if test="outStorageStatus != null">
                #{outStorageStatus,jdbcType=INTEGER},
            </if>
            <if test="storageId != null">
                #{storageId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.forest.wu.pojo.Outstorage">
        update outstorage
        <set>
            <if test="sendUnit != null">
                sendUnit = #{sendUnit,jdbcType=INTEGER},
            </if>
            <if test="getUnit != null">
                getUnit = #{getUnit,jdbcType=INTEGER},
            </if>
            <if test="out_time != null">
                out_time = #{out_time,jdbcType=TIMESTAMP},
            </if>
            <if test="productNum != null">
                productNum = #{productNum,jdbcType=INTEGER},
            </if>
            <if test="workorderId != null">
                workorderId = #{workorderId,jdbcType=INTEGER},
            </if>
            <if test="packageId != null">
                packageId = #{packageId,jdbcType=INTEGER},
            </if>
            <if test="packageWeight != null">
                packageWeight = #{packageWeight,jdbcType=DOUBLE},
            </if>
            <if test="outStorageStatus != null">
                outStorageStatus = #{outStorageStatus,jdbcType=INTEGER},
            </if>
            <if test="storageId != null">
                storageId = #{storageId,jdbcType=INTEGER},
            </if>
        </set>
        where outId = #{outId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.forest.wu.pojo.Outstorage">
    update outstorage
    set sendUnit = #{sendUnit,jdbcType=INTEGER},
      getUnit = #{getUnit,jdbcType=INTEGER},
      out_time = #{out_time,jdbcType=TIMESTAMP},
      productNum = #{productNum,jdbcType=INTEGER},
       workorderId = #{workorderId,jdbcType=INTEGER},
      packageId = #{packageId,jdbcType=INTEGER},
      packageWeight = #{packageWeight,jdbcType=DOUBLE},
      outStorageStatus = #{outStorageStatus,jdbcType=INTEGER},
      storageId = #{storageId,jdbcType=INTEGER}
    where outId = #{outId,jdbcType=INTEGER}
  </update>
</mapper>