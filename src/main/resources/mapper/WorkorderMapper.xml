<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forest.wu.dao.WorkorderMapper">
    <resultMap id="BaseResultMap" type="com.forest.wu.pojo.Workorder">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="orderNum" jdbcType="VARCHAR" property="orderNum"/>
        <result column="workNum" jdbcType="VARCHAR" property="workNum"/>
        <result column="packageId" jdbcType="BIGINT" property="packageId"/>
        <result column="productNum" jdbcType="BIGINT" property="productNum"/>
        <result column="sName" jdbcType="VARCHAR" property="sName"/>
        <result column="sTel" jdbcType="VARCHAR" property="sTel"/>
        <result column="sCity" jdbcType="INTEGER" property="sCity"/>
        <result column="sAddress" jdbcType="VARCHAR" property="sAddress"/>
        <result column="sPoint" jdbcType="INTEGER" property="sPoint"/>
        <result column="gName" jdbcType="VARCHAR" property="gName"/>
        <result column="gTel" jdbcType="VARCHAR" property="gTel"/>
        <result column="gCity" jdbcType="INTEGER" property="gCity"/>
        <result column="gAddress" jdbcType="VARCHAR" property="gAddress"/>
        <result column="gPoint" jdbcType="INTEGER" property="gPoint"/>
        <result column="productType" jdbcType="VARCHAR" property="productType"/>
        <result column="realWeight" jdbcType="DOUBLE" property="realWeight"/>
        <result column="workStatus" jdbcType="INTEGER" property="workStatus"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="expenses" jdbcType="DOUBLE" property="expenses"/>
        <result column="packageWeight" jdbcType="DOUBLE" property="packageWeight"/>
        <result column="gCourier" jdbcType="INTEGER" property="gCourier"/>
        <result column="sCourier" jdbcType="INTEGER" property="sCourier"/>
        <result column="preVolume" jdbcType="DOUBLE" property="preVolume"/>
        <result column="riseTime" jdbcType="TIMESTAMP" property="riseTime"/>
        <result column="inStorageTime" jdbcType="TIMESTAMP" property="inStorageTime"/>
        <result column="outStorageTime" jdbcType="TIMESTAMP" property="outStorageTime"/>
        <result column="finishedTime" jdbcType="TIMESTAMP" property="finishedTime"/>
        <result column="productLocation" jdbcType="INTEGER" property="productLocation"/>
        <result column="auditStatus" jdbcType="INTEGER" property="auditStatus"/>
        <result column="invalidatedState" jdbcType="INTEGER" property="invalidatedState"/>
        <result column="inStorageStatus" jdbcType="INTEGER" property="inStorageStatus"/>
        <result column="outStorageStatus" jdbcType="INTEGER" property="outStorageStatus"/>
        <result column="entrust" jdbcType="INTEGER" property="entrust"/>
        <result column="entrustNumber" jdbcType="INTEGER" property="entrustNumber"/>
        <result column="isPay" jdbcType="INTEGER" property="isPay"/>
        <!--id对应的name值-->
        <result column="workStatusName" jdbcType="VARCHAR" property="workStatusName"/>
        <result column="inStorageStatusName" jdbcType="VARCHAR" property="inStorageStatusName"/>
        <result column="outStorageStatusName" jdbcType="VARCHAR" property="outStorageStatusName"/>
        <result column="productLocationName" jdbcType="VARCHAR" property="productLocationName"/>
        <result column="auditStatusName" jdbcType="VARCHAR" property="auditStatusName"/>
        <result column="invalidatedStateName" jdbcType="VARCHAR" property="invalidatedStateName"/>
        <result column="sCityName" jdbcType="VARCHAR" property="sCityName"/>
        <result column="gCityName" jdbcType="VARCHAR" property="gCityName"/>
        <result column="sPointName" jdbcType="VARCHAR" property="sPointName"/>
        <result column="gPointName" jdbcType="VARCHAR" property="gPointName"/>
        <result column="entrustName" jdbcType="VARCHAR" property="entrustName"/>
        <result column="isPayName" jdbcType="VARCHAR" property="isPayName"/>
        <result column="productTypeName" jdbcType="VARCHAR" property="productTypeName"/>
    </resultMap>
    <sql id="Base_Column_List">
   id, orderNum, workNum, packageId, productNum, sName, sTel, sCity, sAddress, sPoint,
    gName, gTel, gCity, gAddress, gPoint, productType,
    realWeight, workStatus, comment,
    expenses,packageWeight,packageWeight, gCourier, sCourier, preVolume, riseTime, inStorageTime, outStorageTime,
     finishedTime, productLocation, auditStatus, invalidatedState, inStorageStatus,outStorageStatus,
    entrust, entrustNumber, isPay
    </sql>
    <sql id="filiale_workorder_List">
    id, orderNum, workNum, packageId, productNum, sName, sTel, sCity,
     (SELECT o.city FROM organization o WHERE w.sCity = o.id) as sCityName,
     sAddress, sPoint,
     (SELECT name FROM organization o WHERE w.sPoint = o.id) as sPointName,
    gName, gTel, gCity,
    (SELECT city FROM organization o WHERE w.gCity = o.id) as gCityName,
     gAddress, gPoint,
     (SELECT name FROM organization o WHERE w.gPoint = o.id) as gPointName,
     productType,
     (SELECT valueName FROM dictionary d WHERE typeCode='goodsStatus' and w.productType = d.valueId) as productTypeName,
     realWeight, workStatus,
    (SELECT valueName FROM dictionary d WHERE typeCode='workStatus' and w.workStatus = d.valueId) as workStatusName,
    comment,expenses, packageWeight,gCourier, sCourier, preVolume, riseTime, inStorageTime, outStorageTime,
    finishedTime, productLocation,
    (SELECT name FROM organization o WHERE w.productLocation=o.id) as productLocationName,
    auditStatus,
    (SELECT valueName FROM dictionary d WHERE d.typeCode='auditStatus' and w.auditStatus = d.valueId) as auditStatusName,
    invalidatedState,
    (SELECT valueName FROM dictionary d WHERE d.typeCode='invalidatedState' and w.invalidatedState = d.valueId) as invalidatedStateName,
    inStorageStatus,
    (SELECT valueName FROM dictionary d WHERE d.typeCode='inStorageStatus' and w.inStorageStatus = d.valueId) as inStorageStatusName,
    outStorageStatus,
    (SELECT valueName FROM dictionary d WHERE d.typeCode='outStorageStatus' and w.outStorageStatus = d.valueId) as outStorageStatusName,
    entrust,
    (SELECT valueName FROM dictionary d WHERE d.typeCode='entrust' and w.entrust = d.valueId) as entrustName,
    entrustNumber, isPay,
    (SELECT valueName FROM dictionary d WHERE d.typeCode='isPay' and w.isPay = d.valueId) as isPayName
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from workorder w
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from workorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.forest.wu.pojo.Workorder">
    insert into workorder (id, orderNum, workNum,
      packageId, productNum, sName,
      sTel, sCity, sAddress,
      sPoint, gName, gTel,
      gCity, gAddress, gPoint,
      productType, realWeight, workStatus,
      comment, expenses,packageWeight, gCourier,
      sCourier, preVolume, riseTime,
      inStorageTime, outStorageTime,  finishedTime, productLocation,
      auditStatus, invalidatedState, inStorageStatus,outStorageStatus,
      entrust, entrustNumber, isPay
      )
    values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{workNum,jdbcType=VARCHAR},
      #{packageId,jdbcType=BIGINT}, #{productNum,jdbcType=BIGINT}, #{sName,jdbcType=VARCHAR},
      #{sTel,jdbcType=VARCHAR}, #{sCity,jdbcType=INTEGER}, #{sAddress,jdbcType=VARCHAR},
      #{sPoint,jdbcType=INTEGER}, #{gName,jdbcType=VARCHAR}, #{gTel,jdbcType=VARCHAR},
      #{gCity,jdbcType=INTEGER}, #{gAddress,jdbcType=VARCHAR}, #{gPoint,jdbcType=INTEGER},
      #{productType,jdbcType=INTEGER}, #{realWeight,jdbcType=DOUBLE}, #{workStatus,jdbcType=INTEGER},
      #{comment,jdbcType=VARCHAR}, #{expenses,jdbcType=DOUBLE}, #{packageWeight,jdbcType=DOUBLE},#{gCourier,jdbcType=INTEGER},
      #{sCourier,jdbcType=INTEGER}, #{preVolume,jdbcType=DOUBLE}, #{riseTime,jdbcType=TIMESTAMP},
      #{inStorageTime,jdbcType=TIMESTAMP}, #{outStorageTime,jdbcType=TIMESTAMP}, #{finishedTime,jdbcType=TIMESTAMP}, #{productLocation,jdbcType=INTEGER},
      #{auditStatus,jdbcType=INTEGER}, #{invalidatedState,jdbcType=INTEGER}, #{inStorageStatus,jdbcType=INTEGER},#{outStorageStatus,jdbcType=INTEGER},
      #{entrust,jdbcType=INTEGER}, #{entrustNumber,jdbcType=INTEGER}, #{isPay,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.forest.wu.pojo.Workorder">
        insert into workorder
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNum != null">
                orderNum,
            </if>
            <if test="workNum != null">
                workNum,
            </if>
            <if test="packageId != null">
                packageId,
            </if>
            <if test="productNum != null">
                productNum,
            </if>
            <if test="sName != null">
                sName,
            </if>
            <if test="sTel != null">
                sTel,
            </if>
            <if test="sCity != null">
                sCity,
            </if>
            <if test="sAddress != null">
                sAddress,
            </if>
            <if test="sPoint != null">
                sPoint,
            </if>
            <if test="gName != null">
                gName,
            </if>
            <if test="gTel != null">
                gTel,
            </if>
            <if test="gCity != null">
                gCity,
            </if>
            <if test="gAddress != null">
                gAddress,
            </if>
            <if test="gPoint != null">
                gPoint,
            </if>
            <if test="productType != null">
                productType,
            </if>
            <if test="realWeight != null">
                realWeight,
            </if>
            <if test="workStatus != null">
                workStatus,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="expenses != null">
                expenses,
            </if>
            <if test="packageWeight != null">
                packageWeight,
            </if>
            <if test="gCourier != null">
                gCourier,
            </if>
            <if test="sCourier != null">
                sCourier,
            </if>
            <if test="preVolume != null">
                preVolume,
            </if>
            <if test="riseTime != null">
                riseTime,
            </if>
            <if test="inStorageTime != null">
                inStorageTime,
            </if>
            <if test="outStorageTime != null">
                outStorageTime,
            </if>
            <if test="finishedTime != null">
                finishedTime,
            </if>
            <if test="productLocation != null">
                productLocation,
            </if>
            <if test="auditStatus != null">
                auditStatus,
            </if>
            <if test="invalidatedState != null">
                invalidatedState,
            </if>
            <if test="inStorageStatus != null">
                inStorageStatus,
            </if>
            <if test="outStorageStatus != null">
                outStorageStatus,
            </if>
            <if test="entrust != null">
                entrust,
            </if>
            <if test="entrustNumber != null">
                entrustNumber,
            </if>
            <if test="isPay != null">
                isPay,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=VARCHAR},
            </if>
            <if test="workNum != null">
                #{workNum,jdbcType=VARCHAR},
            </if>
            <if test="packageId != null">
                #{packageId,jdbcType=BIGINT},
            </if>
            <if test="productNum != null">
                #{productNum,jdbcType=BIGINT},
            </if>
            <if test="sName != null">
                #{sName,jdbcType=VARCHAR},
            </if>
            <if test="sTel != null">
                #{sTel,jdbcType=VARCHAR},
            </if>
            <if test="sCity != null">
                #{sCity,jdbcType=INTEGER},
            </if>
            <if test="sAddress != null">
                #{sAddress,jdbcType=VARCHAR},
            </if>
            <if test="sPoint != null">
                #{sPoint,jdbcType=INTEGER},
            </if>
            <if test="gName != null">
                #{gName,jdbcType=VARCHAR},
            </if>
            <if test="gTel != null">
                #{gTel,jdbcType=VARCHAR},
            </if>
            <if test="gCity != null">
                #{gCity,jdbcType=INTEGER},
            </if>
            <if test="gAddress != null">
                #{gAddress,jdbcType=VARCHAR},
            </if>
            <if test="gPoint != null">
                #{gPoint,jdbcType=INTEGER},
            </if>
            <if test="productType != null">
                #{productType,jdbcType=INTEGER},
            </if>
            <if test="realWeight != null">
                #{realWeight,jdbcType=DOUBLE},
            </if>
            <if test="workStatus != null">
                #{workStatus,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="expenses != null">
                #{expenses,jdbcType=DOUBLE},
            </if>
            <if test="packageWeight != null">
                #{packageWeight,jdbcType=DOUBLE},
            </if>
            <if test="gCourier != null">
                #{gCourier,jdbcType=INTEGER},
            </if>
            <if test="sCourier != null">
                #{sCourier,jdbcType=INTEGER},
            </if>
            <if test="preVolume != null">
                #{preVolume,jdbcType=DOUBLE},
            </if>
            <if test="riseTime != null">
                #{riseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="inStorageTime != null">
                #{inStorageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outStorageTime != null">
                #{outStorageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishedTime != null">
                #{finishedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="productLocation != null">
                #{productLocation,jdbcType=INTEGER},
            </if>
            <if test="auditStatus != null">
                #{auditStatus,jdbcType=INTEGER},
            </if>
            <if test="invalidatedState != null">
                #{invalidatedState,jdbcType=INTEGER},
            </if>
            <if test="inStorageStatus != null">
                #{inStorageStatus,jdbcType=INTEGER},
            </if>
            <if test="outStorageStatus != null">
                #{outStorageStatus,jdbcType=INTEGER},
            </if>
            <if test="entrust != null">
                #{entrust,jdbcType=INTEGER},
            </if>
            <if test="entrustNumber != null">
                #{entrustNumber,jdbcType=INTEGER},
            </if>
            <if test="isPay != null">
                #{isPay,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.forest.wu.pojo.Workorder">
        update workorder
        <set>
            <if test="orderNum != null">
                orderNum = #{orderNum,jdbcType=VARCHAR},
            </if>
            <if test="workNum != null">
                workNum = #{workNum,jdbcType=VARCHAR},
            </if>
            <if test="packageId != null">
                packageId = #{packageId,jdbcType=BIGINT},
            </if>
            <if test="productNum != null">
                productNum = #{productNum,jdbcType=BIGINT},
            </if>
            <if test="sName != null">
                sName = #{sName,jdbcType=VARCHAR},
            </if>
            <if test="sTel != null">
                sTel = #{sTel,jdbcType=VARCHAR},
            </if>
            <if test="sCity != null">
                sCity = #{sCity,jdbcType=INTEGER},
            </if>
            <if test="sAddress != null">
                sAddress = #{sAddress,jdbcType=VARCHAR},
            </if>
            <if test="sPoint != null">
                sPoint = #{sPoint,jdbcType=INTEGER},
            </if>
            <if test="gName != null">
                gName = #{gName,jdbcType=VARCHAR},
            </if>
            <if test="gTel != null">
                gTel = #{gTel,jdbcType=VARCHAR},
            </if>
            <if test="gCity != null">
                gCity = #{gCity,jdbcType=INTEGER},
            </if>
            <if test="gAddress != null">
                gAddress = #{gAddress,jdbcType=VARCHAR},
            </if>
            <if test="gPoint != null">
                gPoint = #{gPoint,jdbcType=INTEGER},
            </if>
            <if test="productType != null">
                productType = #{productType,jdbcType=INTEGER},
            </if>
            <if test="realWeight != null">
                realWeight = #{realWeight,jdbcType=DOUBLE},
            </if>
            <if test="workStatus != null">
                workStatus = #{workStatus,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="expenses != null">
                expenses = #{expenses,jdbcType=DOUBLE},
            </if>
            <if test="packageWeight != null">
                packageWeight = #{packageWeight,jdbcType=DOUBLE},
            </if>
            <if test="gCourier != null">
                gCourier = #{gCourier,jdbcType=INTEGER},
            </if>
            <if test="sCourier != null">
                sCourier = #{sCourier,jdbcType=INTEGER},
            </if>
            <if test="preVolume != null">
                preVolume = #{preVolume,jdbcType=DOUBLE},
            </if>
            <if test="riseTime != null">
                riseTime = #{riseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="inStorageTime != null">
                inStorageTime = #{inStorageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outStorageTime != null">
                outStorageTime = #{outStorageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishedTime != null">
                finishedTime = #{finishedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="productLocation != null">
                productLocation = #{productLocation,jdbcType=INTEGER},
            </if>
            <if test="auditStatus != null">
                auditStatus = #{auditStatus,jdbcType=INTEGER},
            </if>
            <if test="invalidatedState != null">
                invalidatedState = #{invalidatedState,jdbcType=INTEGER},
            </if>
            <if test="inStorageStatus != null">
                inStorageStatus = #{inStorageStatus,jdbcType=INTEGER},
            </if>
            <if test="outStorageStatus != null">
                outStorageStatus = #{outStorageStatus,jdbcType=INTEGER},
            </if>
            <if test="entrust != null">
                entrust = #{entrust,jdbcType=INTEGER},
            </if>
            <if test="entrustNumber != null">
                entrustNumber = #{entrustNumber,jdbcType=INTEGER},
            </if>
            <if test="isPay != null">
                isPay = #{isPay,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.forest.wu.pojo.Workorder">
    update workorder
    set orderNum = #{orderNum,jdbcType=VARCHAR},
      workNum = #{workNum,jdbcType=VARCHAR},
      packageId = #{packageId,jdbcType=BIGINT},
      productNum = #{productNum,jdbcType=BIGINT},
      sName = #{sName,jdbcType=VARCHAR},
      sTel = #{sTel,jdbcType=VARCHAR},
      sCity = #{sCity,jdbcType=INTEGER},
      sAddress = #{sAddress,jdbcType=VARCHAR},
      sPoint = #{sPoint,jdbcType=INTEGER},
      gName = #{gName,jdbcType=VARCHAR},
      gTel = #{gTel,jdbcType=VARCHAR},
      gCity = #{gCity,jdbcType=INTEGER},
      gAddress = #{gAddress,jdbcType=VARCHAR},
      gPoint = #{gPoint,jdbcType=INTEGER},
      productType = #{productType,jdbcType=INTEGER},
      realWeight = #{realWeight,jdbcType=DOUBLE},
      workStatus = #{workStatus,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      expenses = #{expenses,jdbcType=DOUBLE},
      packageWeight = #{packageWeight,jdbcType=DOUBLE},
      gCourier = #{gCourier,jdbcType=INTEGER},
      sCourier = #{sCourier,jdbcType=INTEGER},
      preVolume = #{preVolume,jdbcType=DOUBLE},
      riseTime = #{riseTime,jdbcType=TIMESTAMP},
      inStorageTime = #{inStorageTime,jdbcType=TIMESTAMP},
      outStorageTime = #{outStorageTime,jdbcType=TIMESTAMP},
      finishedTime = #{finishedTime,jdbcType=TIMESTAMP},
      productLocation = #{productLocation,jdbcType=INTEGER},
      auditStatus = #{auditStatus,jdbcType=INTEGER},
      invalidatedState = #{invalidatedState,jdbcType=INTEGER},
      inStorageStatus = #{inStorageStatus,jdbcType=INTEGER},
      outStorageStatus = #{outStorageStatus,jdbcType=INTEGER},
      entrust = #{entrust,jdbcType=INTEGER},
      entrustNumber = #{entrustNumber,jdbcType=INTEGER},
      isPay = #{isPay,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--总公司工单查询-->
    <select id="selectWorkOrder" resultMap="BaseResultMap">
        select
        <include refid="filiale_workorder_List"/>
        from workorder w
        <trim prefix="where" prefixOverrides="and | or">
            <if test="workNum!=null and workNum!=''">
                and workNum like CONCAT ('%',#{workNum},'%')
            </if>

            <if test="orderNum!=null and orderNum!=''">
                and orderNum like CONCAT ('%',#{orderNum},'%')
            </if>
            <if test="productNum!=null and productNum!=''">
                and productNum=#{productNum}
            </if>
            <if test="packageId!=null and packageId!=''">
                and packageId=#{packageId}
            </if>
            <if test="sName!=null and sName!=''">
                and sName=#{sName}
            </if>
            <if test="sTel!=null and sTel!=''">
                and sTel=#{sTel}
            </if>
            <if test="sPoint!=null and sPoint!=''">
                and sPoint=#{sPoint}
            </if>
            <if test="sCity!=null and sCity!=''">
                and sCity=#{sCity}
            </if>
            <if test="gName!=null and gName!=''">
                and gName=#{gName}
            </if>
            <if test="gTel!=null and  gTel!=''">
                and gTel=#{gTel}
            </if>
            <if test="gCity!=null and gCity!=''">
                and gCity=#{gCity}
            </if>
            <if test="gPoint!=null and gPoint!=''">
                and gPoint=#{gPoint}
            </if>
            <if test="workStatus!=null and workStatus!=''">
                and workStatus=#{workStatus}
            </if>
            <if test="gCourier!=null and gCourier!=''">
                and gCourier=#{gCourier}
            </if>
            <if test="sCourier!=null and sCourier!=''">
                and sCourier=#{sCourier}
            </if>
        </trim>
    </select>


    <!--分公司查询工单-->
    <select id="selectWorkOrderByCondition" resultMap="BaseResultMap">
        select
        <include refid="filiale_workorder_List"/>
        from workorder w
        <trim prefix="where" prefixOverrides="and | or">
            <if test="workNum!=null and workNum!=''">
                and workNum like CONCAT ('%',#{workNum},'%')
            </if>
            <if test="orderNum!=null and orderNum!=''">
                and orderNum like CONCAT ('%',#{orderNum},'%')
            </if>
            <if test="productNum!=null">
                and productNum=#{productNum}
            </if>
            <if test="packageId!=null">
                and packageId=#{packageId}
            </if>
            <if test="workStatus!=null">
                and workStatus=#{workStatus}
            </if>
            <if test="inStorageStatus!=null">
                and inStorageStatus=#{inStorageStatus}
            </if>
            <if test="outStorageStatus!=null">
                and outStorageStatus=#{outStorageStatus}
            </if>
            <if test="wdName!=null">
                and sPoint=(SELECT id FROM organization WHERE name=#{wdName} ) or gPoint=(SELECT id FROM organization
                WHERE name=#{wdName} )
            </if>
        </trim>
    </select>

    <!--查询所有待入库的工单-->
    <select id="selectReadyInStorageWorkOrderList" resultMap="BaseResultMap">
        select
        <include refid="filiale_workorder_List"/>
        from workorder w
        where inStorageStatus=1
    </select>


    <!--查询所有已入库待出库的工单-->
    <select id="selectOutStorageWorkOrderList" resultMap="BaseResultMap">
        select
        <include refid="filiale_workorder_List"/>
        from workorder w
        where inStorageStatus=2 and outStorageStatus=1
    </select>

    <!--根据工单号查询单个工单-->
    <select id="selectWorkOrderByWorkNum" resultMap="BaseResultMap">
        select
        <include refid="filiale_workorder_List"/>
        from workorder w
        where workNum=#{workNum}
    </select>

    <select id="selectWorkOrderById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="filiale_workorder_List"/>
        from workorder w
        where id = #{id,jdbcType=INTEGER}
    </select>


    <!--肖林辉-->
    <!--快递员工单查询-->
    <select id="selectWorkOrderByCourier" parameterType="com.forest.wu.pojo.Workorder"
            resultType="com.forest.wu.pojo.Workorder">
        select *
        from workorder where 1=1
        <if test="sCourier !=null ">
            and sCourier = #{sCourier}
        </if>
        <if test="workNum!=null ">
            and workNum like CONCAT ('%',#{workNum},'%')
        </if>
        <if test="orderNum!=null  ">
            and orderNum like CONCAT ('%',#{orderNum},'%')
        </if>
        <if test="gName!=null  ">
            and gName like CONCAT ('%',#{gName},'%')
        </if>
        <if test="gTel!=null  ">
            and gTel like CONCAT ('%',#{gTel},'%')
        </if>
        <if test="gAddress!=null  ">
            and gAddress like CONCAT ('%',#{gAddress},'%')
        </if>
    </select>


    <!--肖林辉 查单个工单-->

    <select id="selectByPrimaryKeyByCourier" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="filiale_workorder_List"/>
        from workorder w
        where id = #{id,jdbcType=INTEGER}
    </select>


    <!--任一-->
    <update id="payDone" parameterType="java.lang.String">
        update workorder
        set isPay = 2
        where orderNum = #{orderNum}
    </update>

    <select id="workorderCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(1) from
        workorder where
        gcity = #{cityid} OR scity = #{cityid}
    </select>

    <select id="workStatus" resultType="com.forest.wu.pojo.Dictionary">
        select *
        from dictionary
        where typeCode = 'workStatus';
    </select>

</mapper>